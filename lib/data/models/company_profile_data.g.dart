// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'company_profile_data.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$CompanyProfileDataImpl _$$CompanyProfileDataImplFromJson(
        Map<String, dynamic> json) =>
    _$CompanyProfileDataImpl(
      companyLogo: json['companyLogo'] as String?,
      companyName: json['companyName'] as String?,
      companyMission: json['companyMission'] as String?,
      logo: json['logo'] as String?,
      companyProfile: json['companyProfile'] as String?,
      webSite: json['webSite'] as String?,
      industryID: json['industryID'] as int?,
      city: json['city'] as String?,
      physicalAddress: json['physicalAddress'] as String?,
      country: json['country'] as String?,
      companyID: json['companyID'] as int?,
      telephoneNumber: json['telephoneNumber'] as String?,
      emailAddress: json['emailAddress'] as String?,
      companyRegistrationNumber: json['companyRegistrationNumber'] as String?,
      dateRegistered: json['dateRegistered'],
      ampLink: json['ampLink'] as String?,
      isStream: json['isStream'] as int?,
      companyOwnerContactID: json['companyOwnerContactID'] as int?,
      companyCreatedDate: json['companyCreatedDate'],
      beeLevelID: json['beeLevelID'],
      blackOwnership: (json['blackOwnership'] as num?)?.toDouble(),
      yearsInBusiness: json['yearsInBusiness'],
      blackOwnershipWomen: (json['blackOwnershipWomen'] as num?)?.toDouble(),
      blackManagement: (json['blackManagement'] as num?)?.toDouble(),
      accreditationBody: json['accreditationBody'],
      accreditationNumber: json['accreditationNumber'],
      fspLicenseNumber: json['fspLicenseNumber'],
      vatRegistrationNumber: json['vatRegistrationNumber'],
      facebook: json['facebook'],
      instagram: json['instagram'],
      twitter: json['twitter'],
      otherSocialMedia: json['otherSocialMedia'],
      companyVision: json['companyVision'] as String?,
      teamExperienceDescription: json['teamExperienceDescription'] as String?,
      existingCommercialLicense:
          json['existingCommercialLicense'] as bool? ?? false,
      existingCommercialLicenseDetail:
          json['existingCommercialLicenseDetail'] as String?,
      problemSolutionDescription: json['problemSolutionDescription'],
      valueCreation: json['valueCreation'],
      valueCreationDetail: json['valueCreationDetail'],
      targetMarket: json['targetMarket'],
      motivation: json['motivation'],
      competitors: json['competitors'],
      competitiveAdvantages: json['competitiveAdvantages'],
      uniqueValueProposition: json['uniqueValueProposition'],
      targetMarketDemographics: json['targetMarketDemographics'],
      targetMarketSize: json['targetMarketSize'],
      targetMarketLocation: json['targetMarketLocation'],
      brandStrategy: json['brandStrategy'],
      leadGeneration: json['leadGeneration'],
      conversionStrategy: json['conversionStrategy'],
    );

Map<String, dynamic> _$$CompanyProfileDataImplToJson(
        _$CompanyProfileDataImpl instance) =>
    <String, dynamic>{
      'companyLogo': instance.companyLogo,
      'companyName': instance.companyName,
      'companyMission': instance.companyMission,
      'logo': instance.logo,
      'companyProfile': instance.companyProfile,
      'webSite': instance.webSite,
      'industryID': instance.industryID,
      'city': instance.city,
      'physicalAddress': instance.physicalAddress,
      'country': instance.country,
      'companyID': instance.companyID,
      'telephoneNumber': instance.telephoneNumber,
      'emailAddress': instance.emailAddress,
      'companyRegistrationNumber': instance.companyRegistrationNumber,
      'dateRegistered': instance.dateRegistered,
      'ampLink': instance.ampLink,
      'isStream': instance.isStream,
      'companyOwnerContactID': instance.companyOwnerContactID,
      'companyCreatedDate': instance.companyCreatedDate,
      'beeLevelID': instance.beeLevelID,
      'blackOwnership': instance.blackOwnership,
      'yearsInBusiness': instance.yearsInBusiness,
      'blackOwnershipWomen': instance.blackOwnershipWomen,
      'blackManagement': instance.blackManagement,
      'accreditationBody': instance.accreditationBody,
      'accreditationNumber': instance.accreditationNumber,
      'fspLicenseNumber': instance.fspLicenseNumber,
      'vatRegistrationNumber': instance.vatRegistrationNumber,
      'facebook': instance.facebook,
      'instagram': instance.instagram,
      'twitter': instance.twitter,
      'otherSocialMedia': instance.otherSocialMedia,
      'companyVision': instance.companyVision,
      'teamExperienceDescription': instance.teamExperienceDescription,
      'existingCommercialLicense': instance.existingCommercialLicense,
      'existingCommercialLicenseDetail':
          instance.existingCommercialLicenseDetail,
      'problemSolutionDescription': instance.problemSolutionDescription,
      'valueCreation': instance.valueCreation,
      'valueCreationDetail': instance.valueCreationDetail,
      'targetMarket': instance.targetMarket,
      'motivation': instance.motivation,
      'competitors': instance.competitors,
      'competitiveAdvantages': instance.competitiveAdvantages,
      'uniqueValueProposition': instance.uniqueValueProposition,
      'targetMarketDemographics': instance.targetMarketDemographics,
      'targetMarketSize': instance.targetMarketSize,
      'targetMarketLocation': instance.targetMarketLocation,
      'brandStrategy': instance.brandStrategy,
      'leadGeneration': instance.leadGeneration,
      'conversionStrategy': instance.conversionStrategy,
    };
